import {
  a as v
} from "./chunk-EUWZTEIB.js";

// node_modules/tsee/lib/types.js
var l = v((h) => {
  "use strict";
  Object.defineProperty(h, "__esModule", { value: true });
  function L(u) {
    return u;
  }
  h.asTypedEventEmitter = L;
});

// node_modules/tsee/lib/ee.js
var m = v((o) => {
  "use strict";
  var p = o && o.__spreadArrays || function() {
    for (var u = 0, e = 0, t = arguments.length; e < t; e++)
      u += arguments[e].length;
    for (var n = Array(u), r = 0, e = 0; e < t; e++)
      for (var i = arguments[e], s = 0, a = i.length; s < a; s++, r++)
        n[r] = i[s];
    return n;
  };
  Object.defineProperty(o, "__esModule", { value: true });
  var y = (
    /** @class */
    function() {
      function u() {
        var e = this;
        this.events = {};
        this.maxListeners = Infinity;
        this.emit = function(t) {
          var n = [];
          for (var r = 1; r < arguments.length; r++) {
            n[r - 1] = arguments[r];
          }
          if (e.events[t]) {
            var i = e.events[t].length;
            var s = Array.from(e.events[t]);
            for (var a = 0, c = s; a < c.length; a++) {
              var g = c[a];
              g.apply(void 0, n);
            }
            return !!i;
          }
          return false;
        };
        this.on = function(t, n) {
          e.addListener(t, n);
          return e;
        };
        this.once = function(t, n) {
          var r = function() {
            var i = [];
            for (var s = 0; s < arguments.length; s++) {
              i[s] = arguments[s];
            }
            n.apply(void 0, i);
            e.removeListener(t, r);
          };
          e.addListener(t, r);
          return e;
        };
        this.addListener = function(t, n) {
          if (!(t in e.events))
            e.events[t] = [n];
          else
            e.events[t].push(n);
          if (e.maxListeners !== Infinity && e.maxListeners <= e.events[t].length)
            console.warn('Maximum event listeners for "' + t + '" event!');
          return e;
        };
        this.removeListener = function(t, n) {
          if (t in e.events) {
            var r = e.events[t].indexOf(n);
            if (r !== -1)
              e.events[t].splice(r, 1);
          }
          return e;
        };
        this.hasListeners = function(t) {
          return e.events[t] && !!e.events[t].length;
        };
        this.prependListener = function(t, n) {
          if (!(t in e.events))
            e.events[t] = [n];
          else
            e.events[t].unshift(n);
          return e;
        };
        this.prependOnceListener = function(t, n) {
          var r = function() {
            var i = [];
            for (var s = 0; s < arguments.length; s++) {
              i[s] = arguments[s];
            }
            n.apply(void 0, i);
            e.removeListener(t, r);
          };
          e.prependListener(t, r);
          return e;
        };
        this.off = function(t, n) {
          return e.removeListener(t, n);
        };
        this.removeAllListeners = function(t) {
          delete e.events[t];
          return e;
        };
        this.setMaxListeners = function(t) {
          e.maxListeners = t;
          return e;
        };
        this.getMaxListeners = function() {
          return e.maxListeners;
        };
        this.listeners = function(t) {
          return p(e.events[t]);
        };
        this.rawListeners = function(t) {
          return e.events[t];
        };
        this.eventNames = function() {
          return Object.keys(e.events);
        };
        this.listenerCount = function(t) {
          return e.events[t] && e.events[t].length || 0;
        };
      }
      return u;
    }()
  );
  o.EventEmitter = y;
});

// node_modules/tsee/lib/index.js
var E = v((f) => {
  function d(u) {
    for (var e in u)
      if (!f.hasOwnProperty(e))
        f[e] = u[e];
  }
  Object.defineProperty(f, "__esModule", { value: true });
  d(l());
  d(m());
});
export default E();
//# sourceMappingURL=tsee.js.map
